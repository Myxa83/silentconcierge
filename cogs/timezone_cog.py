import discord
from discord.ext import commands
from discord import app_commands, Interaction
import json
import os

TIMEZONE_FILE = "timezones.json"
MODERATOR_ROLE_ID = 1375070910138028044  # ID —Ä–æ–ª—ñ "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä"

# –ü–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —Å–ø–∏—Å–æ–∫ —Ç–∞–π–º–∑–æ–Ω
TIMEZONE_CHOICES = {
    "–ê–º–µ—Ä–∏–∫–∞ (–°—Ö—ñ–¥–Ω–∞) üá∫üá∏": "America/New_York",
    "–ê–º–µ—Ä–∏–∫–∞ (–ó–∞—Ö—ñ–¥–Ω–∞) üá∫üá∏": "America/Los_Angeles",
    "–õ–æ–Ω–¥–æ–Ω üá¨üáß": "Europe/London",
    "–£–∫—Ä–∞—ó–Ω–∞ üá∫üá¶": "Europe/Kyiv",
    "–Ñ–≤—Ä–æ–ø–∞ (–ë–µ—Ä–ª—ñ–Ω) üá©üá™": "Europe/Berlin",
    "–ê–∑—ñ—è (–¢–æ–∫—ñ–æ) üáØüáµ": "Asia/Tokyo",
    "–ê–∑—ñ—è (–®–∞–Ω—Ö–∞–π) üá®üá≥": "Asia/Shanghai"
}

# –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–∞–Ω—ñ –∑ —Ñ–∞–π–ª—É
def load_timezones():
    if not os.path.exists(TIMEZONE_FILE):
        return {}
    with open(TIMEZONE_FILE, "r") as f:
        return json.load(f)

# –ó–±–µ—Ä–µ–≥—Ç–∏ –¥–∞–Ω—ñ —É —Ñ–∞–π–ª
def save_timezones(data):
    with open(TIMEZONE_FILE, "w") as f:
        json.dump(data, f, indent=2)

# –û—Ç—Ä–∏–º–∞—Ç–∏ —Ç–∞–π–º–∑–æ–Ω—É –ø–æ user_id
def get_timezone_for_user(user_id: int):
    data = load_timezones()
    return data.get(str(user_id), "Europe/London")

class TimezoneSelect(discord.ui.Select):
    def __init__(self):
        options = [
            discord.SelectOption(label=label, value=tz) for label, tz in TIMEZONE_CHOICES.items()
        ]
        super().__init__(placeholder="–û–±–µ—Ä—ñ—Ç—å —Å–≤—ñ–π —á–∞—Å–æ–≤–∏–π –ø–æ—è—Å...", min_values=1, max_values=1, options=options)

    async def callback(self, interaction: Interaction):
        data = load_timezones()
        data[str(interaction.user.id)] = self.values[0]
        save_timezones(data)

        try:
            await interaction.user.send(f"‚úÖ –í–∞—à —á–∞—Å–æ–≤–∏–π –ø–æ—è—Å –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: `{self.values[0]}`")
            await interaction.response.defer()  # –ø—Ä–∏—Ö–æ–≤–∞—Ç–∏ –≤–∑–∞—î–º–æ–¥—ñ—é (–±–æ DM –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ)
        except discord.Forbidden:
            await interaction.response.defer()

class TimezoneView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=60)
        self.add_item(TimezoneSelect())

class TimezoneCog(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    # –Ø–∫—â–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä –æ–±–∏—Ä–∞—î —Ç–∞–π–º–∑–æ–Ω—É –≤—Ä—É—á–Ω—É (—Ä–µ–∑–µ—Ä–≤–Ω–∞ –∫–æ–º–∞–Ω–¥–∞)
    @app_commands.command(name="set_timezone", description="–û–±–µ—Ä—ñ—Ç—å –≤–∞—à —á–∞—Å–æ–≤–∏–π –ø–æ—è—Å")
    @app_commands.checks.has_permissions(manage_guild=True)
    async def set_timezone(self, interaction: Interaction):
        await interaction.response.send_message("üåç –û–±–µ—Ä—ñ—Ç—å —Å–≤—ñ–π —á–∞—Å–æ–≤–∏–π –ø–æ—è—Å:", view=TimezoneView(), ephemeral=True)

    @set_timezone.error
    async def timezone_error(self, interaction: Interaction, error):
        if isinstance(error, app_commands.errors.MissingPermissions):
            await interaction.response.send_message("‚ùå –¢—ñ–ª—å–∫–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∏ –º–æ–∂—É—Ç—å –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ —Ç–∞–π–º–∑–æ–Ω—É.", ephemeral=True)

    # –í—ñ–¥—Å—Ç–µ–∂—É—î–º–æ –ø—Ä–∏—Å–≤–æ—î–Ω–Ω—è —Ä–æ–ª—ñ "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä"
    @commands.Cog.listener()
    async def on_member_update(self, before: discord.Member, after: discord.Member):
        before_roles = {role.id for role in before.roles}
        after_roles = {role.id for role in after.roles}

        if MODERATOR_ROLE_ID not in before_roles and MODERATOR_ROLE_ID in after_roles:
            try:
                await after.send("üåç –í–∏ —Å—Ç–∞–ª–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º! –û–±–µ—Ä—ñ—Ç—å —Å–≤—ñ–π —á–∞—Å–æ–≤–∏–π –ø–æ—è—Å:", view=TimezoneView())
            except discord.Forbidden:
                pass  # DM –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–æ, –º–æ–≤—á–∏–º–æ

async def setup(bot):
    await bot.add_cog(TimezoneCog(bot))
