import discord
from discord.ext import commands
from discord import app_commands, Interaction
import random
from PIL import Image, ImageDraw, ImageFont, ImageFilter
import requests
from io import BytesIO
import asyncio

class WelcomeCog(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.templates = [
            "{{mention}} –∑–∞–ª–µ—Ç—ñ–≤ –Ω–∞ –Ω–∞—à—É –±–∞–∑—É Silent Cove [BDO EU] –∑ –¥–≤–æ—Ö –Ω—ñ–≥!",
            "–î–†–ê–ö–û–ù –ü–†–û–ë–£–î–ò–í–°–Ø! {{mention}} —Ä–æ–∑–≥–æ—Ä—Ç–∞—î –∫—Ä–∏–ª–∞ –Ω–∞–¥ —Å–µ—Ä–≤–µ—Ä–æ–º!",
            "–í –Ω–∞—à—ñ–π —Å–µ–∫—Ç—ñ‚Ä¶ –æ–π, —Ç–æ–±—Ç–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ, –Ω–æ–≤–∏–π —É—á–∞—Å–Ω–∏–∫ ‚Äì {{mention}}!",
            "{{mention}} —Å—Ö–æ–¥–∏—Ç—å —ñ–∑ –∑—ñ—Ä–æ–∫ –ø—Ä—è–º–æ –¥–æ –Ω–∞—Å. –ú–∞–≥—ñ—è —Ç—ñ–ª—å–∫–∏ –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è!",
            "–¢–∏—à–∞ –ø–æ—Ä—É—à–µ–Ω–∞. {{mention}} –∑‚Äô—è–≤–∏–≤—Å—è —É –ª—ñ—Å—ñ Silent Cove!",
            "–ö–†–ò–¢–ò–ß–ù–ò–ô –í–ò–ë–£–• –ö–†–£–¢–û–°–¢–Ü! {{mention}} –∞–∫—Ç–∏–≤—É–≤–∞–≤(–ª–∞) —É–ª—å—Ç—É!",
            "–ü–∞–Ω—ñ —Ç–∞ –ø–∞–Ω–æ–≤–µ, –∑—É—Å—Ç—Ä—ñ—á–∞–π—Ç–µ! –ù–∞–π–æ—á—ñ–∫—É–≤–∞–Ω—ñ—à–∏–π –≥—ñ—Å—Ç—å ‚Äì {{mention}}!",
        ]
        self.titles = [
            "üì• –ü—Ä–∏–±—É—Ç—Ç—è –Ω–æ–≤–æ–≥–æ –¥—É—Ö—É!",
            "üì• –ü—Ä–∏–±—É—Ç—Ç—è –Ω–æ–≤–æ—ó —Å–æ–ª–æ–¥–∫–æ—ó –±—É–ª–æ—á–∫–∏!",
            "üì• –ü—Ä–∏–±—É—Ç—Ç—è –Ω–æ–≤–æ–≥–æ –∫–æ—Ç—è—Ç–∫–∞!",
            "üì• –ü—Ä–∏–±—É—Ç—Ç—è –Ω–æ–≤–æ–≥–æ –≥–æ–ª–æ–≥–æ –ø–æ—Ä–æ—Å—è—Ç–∫–∞!",
            "üì• –ü—Ä–∏–±—É—Ç—Ç—è –Ω–æ–≤–æ—ó –ª–µ–≥–µ–Ω–¥–∏ —Ç—É–º–∞–Ω—É!",
            "üì• –ü—Ä–∏–±—É—Ç—Ç—è –Ω–æ–≤–æ—ó –∂–µ—Ä—Ç–≤–∏!"
        ]
        self.images = [
            "https://raw.githubusercontent.com/Myxa83/silentconcierge/main/welcome.png",
            "https://raw.githubusercontent.com/Myxa83/silentconcierge/main/corsair_scroll_dark.png"
        ]
        self.banned_users = set()
        self.joined_cache = {}

    def build_caption(self, member: discord.Member):
        text = random.choice(self.templates).replace("{{mention}}", member.display_name)
        return '\n'.join(self.wrap_text(text, width=18))

    def build_title(self, member: discord.Member):
        title = random.choice(self.titles)
        return f"{title}"

    def wrap_text(self, text, width=18):
        words = text.split()
        lines = []
        current_line = ""
        for word in words:
            if len(current_line) + len(word) + 1 <= width:
                current_line += (" " if current_line else "") + word
            else:
                lines.append(current_line)
                current_line = word
        if current_line:
            lines.append(current_line)
        return lines

    def rounded_mask(self, w, h, r):
        mask = Image.new('L', (w, h), 0)
        draw = ImageDraw.Draw(mask)
        draw.rounded_rectangle((0, 0, w, h), radius=r, fill=255)
        return mask

    async def create_image_with_text(self, text: str, member: discord.Member) -> discord.File:
        print("üü¢ [DEBUG] –ü–æ—á–∞—Ç–æ–∫ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è...")

        url = random.choice(self.images)
        print(f"üîó [DEBUG] –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–æ–Ω—É –∑: {url}")
        response = requests.get(url, timeout=5)
        background = Image.open(BytesIO(response.content)).convert("RGBA")

        print("üé® [DEBUG] –§–æ–Ω —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–∫—Ä–∏—Ç–æ")
        draw = ImageDraw.Draw(background)

        font_regular = ImageFont.truetype("FixelDisplay-SemiBold.otf", 48)
        font_bold = ImageFont.truetype("FixelDisplay-Bold.otf", 44)

        lines = text.split('\n')
        y = 240 + 40
        print(f"üìÑ [DEBUG] –†–µ–Ω–¥–µ—Ä–∏–º {len(lines)} —Ä—è–¥–∫—ñ–≤...")
        for line in lines:
            print(f"üìù [DEBUG] –†—è–¥–æ–∫: {line}")
            x = 190
            if member.display_name in line:
                before, sep, after = line.partition(member.display_name)
                if before:
                    draw.text((x, y), before, font=font_regular, fill=(13, 9, 7, 255))
                    x += draw.textlength(before, font=font_regular)
                draw.text((x, y), member.display_name, font=font_bold, fill=(45, 30, 20, 255))
                x += draw.textlength(member.display_name, font=font_bold)
                if after:
                    draw.text((x, y), after, font=font_regular, fill=(13, 9, 7, 255))
            else:
                draw.text((x, y), line, font=font_regular, fill=(13, 9, 7, 255))
            y += 92

        avatar_url = str(member.display_avatar.replace(size=512))
        print(f"üñºÔ∏è [DEBUG] –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∞–≤–∞—Ç–∞—Ä –∑: {avatar_url}")
        avatar_response = requests.get(avatar_url)
        avatar = Image.open(BytesIO(avatar_response.content)).convert("RGBA")
        avatar = avatar.resize((320, 320))

        print("üåÄ [DEBUG] –°—Ç–≤–æ—Ä—é—î–º–æ –º–∞—Å–∫—É –∑ —Ä–∞–¥—ñ—É—Å–æ–º 60")
        mask = self.rounded_mask(320, 320, 60)

        avatar_x = background.width - 360 - 65
        avatar_y = background.height - 360 - 50

        print(f"üìç [DEBUG] –í—Å—Ç–∞–≤–ª—è—î–º–æ –∞–≤–∞—Ç–∞—Ä –Ω–∞ –ø–æ–∑–∏—Ü—ñ—é: ({avatar_x}, {avatar_y})")
        background.paste(avatar, (avatar_x, avatar_y), mask)

        output = BytesIO()
        background.save(output, format="PNG")
        output.seek(0)
        print("‚úÖ [DEBUG] –ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≥–æ—Ç–æ–≤–µ!")

        return discord.File(output, filename="welcome.png")

    @app_commands.command(name="–ø—Ä–∏–≤—ñ—Ç", description="–¢–µ—Å—Ç–æ–≤–µ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è")
    async def test_hi(self, interaction: Interaction):
        await interaction.response.defer(thinking=True)
        caption = self.build_caption(interaction.user)
        title = self.build_title(interaction.user)
        file = await self.create_image_with_text(caption, interaction.user)
        embed = discord.Embed(
            title=title,
            description=interaction.user.mention,
            color=discord.Colour.teal()
        )
        embed.set_image(url="attachment://welcome.png")
        embed.set_footer(
            text="Silent Concierge by Myxa",
            icon_url=self.bot.user.display_avatar.url
        )
        await interaction.followup.send(embed=embed, file=file)

    @commands.Cog.listener()
    async def on_member_join(self, member):
        self.joined_cache[member.id] = member.joined_at

    @commands.Cog.listener()
    async def on_member_ban(self, guild, user):
        print(f"‚õî BAN: {user}")
        self.banned_users.add(user.id)
        reason = "–ù–µ –≤–∫–∞–∑–∞–Ω–æ"
        try:
            async for entry in guild.audit_logs(limit=10, action=discord.AuditLogAction.ban):
                if entry.target.id == user.id:
                    reason = entry.reason or "–ù–µ –≤–∫–∞–∑–∞–Ω–æ"
                    break
        except Exception as e:
            print(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –ø—Ä–∏—á–∏–Ω–∏ –±–∞–Ω—É: {e}")

        joined_at = self.joined_cache.get(user.id, "–Ω–µ–≤—ñ–¥–æ–º–æ")
        if isinstance(joined_at, discord.utils.snowflake_time):
            joined_at = joined_at.strftime("%Y-%m-%d %H:%M:%S")

        channel = self.bot.get_channel(1350571574557675520)
        if channel:
            embed = discord.Embed(
                title="‚õî –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑–∞–±–∞–Ω–µ–Ω–æ!",
                description=f"{user.mention} –ø–æ—Ä—É—à–∏–≤(–ª–∞) –ø—Ä–∞–≤–∏–ª–∞ Silent Cove.",
                color=discord.Color.red()
            )
            embed.add_field(name="üìå –ü—Ä–∏—á–∏–Ω–∞:", value=reason, inline=False)
            embed.set_thumbnail(url=user.display_avatar.url)
            embed.add_field(name="üìÖ –î–æ–ª—É—á–∏–≤—Å—è:", value=joined_at, inline=True)
            embed.add_field(name="üìÖ –ü–æ–∫–∏–Ω—É–≤:", value=discord.utils.utcnow().strftime("%Y-%m-%d %H:%M:%S"), inline=True)
            await channel.send(embed=embed)

        try:
            dm_embed = discord.Embed(
                title="‚õî –í–∏ –±—É–ª–∏ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω—ñ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ Silent Cove",
                description=f"–ü—Ä–∏—á–∏–Ω–∞: {reason}",
                color=discord.Color.red()
            )
            dm_embed.set_image(url="https://i.imgur.com/E0G8qTz.png")
            await user.send(embed=dm_embed)
        except Exception as e:
            print(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ DM –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {user}: {e}")

    @commands.Cog.listener()
    async def on_member_remove(self, member):
        if member.id in self.banned_users:
            self.banned_users.remove(member.id)
            return
        print(f"üì§ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∏–π—à–æ–≤: {member}")
        channel = self.bot.get_channel(1350571574557675520)
        joined_at = self.joined_cache.get(member.id, member.joined_at)
        if isinstance(joined_at, discord.utils.snowflake_time):
            joined_at = joined_at.strftime("%Y-%m-%d %H:%M:%S")
        elif joined_at is None:
            joined_at = "–Ω–µ–≤—ñ–¥–æ–º–æ"
        elif isinstance(joined_at, str):
            pass
        else:
            joined_at = str(joined_at)

        if channel:
            embed = discord.Embed(
                title="üö™ –£—á–∞—Å–Ω–∏–∫ –ø–æ–∫–∏–Ω—É–≤ —Å–µ—Ä–≤–µ—Ä",
                description=f"{member.mention} –±—ñ–ª—å—à–µ –∑ –Ω–∞–º–∏ –Ω–µ–º–∞...",
                color=discord.Color.red()
            )
            embed.set_thumbnail(url=member.display_avatar.url)
            embed.add_field(name="üìÖ –î–æ–ª—É—á–∏–≤—Å—è:", value=joined_at, inline=True)
            embed.add_field(name="üìÖ –ü–æ–∫–∏–Ω—É–≤:", value=discord.utils.utcnow().strftime("%Y-%m-%d %H:%M:%S"), inline=True)
            await channel.send(embed=embed)

    async def cog_load(self):
        guild = discord.Object(id=1323454227816906802)
        self.bot.tree.add_command(self.test_hi, guild=guild)

async def setup(bot):
    await bot.add_cog(WelcomeCog(bot))
