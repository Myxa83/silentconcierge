# -*- coding: utf-8 -*-
import random
import time
from io import BytesIO

import aiohttp
import discord
from discord import app_commands
from discord.ext import commands
from PIL import Image, ImageDraw, ImageFont

# --------- –ö–∞–Ω–∞–ª–∏ ---------------------------------------------------------------
WELCOME_CHANNEL_ID = 1324854638276509828          # –≤—ñ—Ç–∞–Ω–Ω—è
FAREWELL_CHANNEL_ID = 1350571574557675520         # –ø—Ä–æ—â–∞–Ω–Ω—è/–±–∞–Ω/—Ä–æ–∑–±–∞–Ω
TEST_WELCOME_CHANNEL_ID = 1370522199873814528     # —Ç–µ—Å—Ç –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ñ–≤

# --------- –ö–æ–ª—å–æ—Ä–∏ --------------------------------------------------------------
WELCOME_COLOR = 0x05B2B4   # –±—ñ—Ä—é–∑–æ–≤–∏–π (–≤—ñ—Ç–∞–Ω–Ω—è / —Ä–æ–∑–±–∞–Ω)
FAREWELL_COLOR = 0xFF0000  # —á–µ—Ä–≤–æ–Ω–∏–π (–≤–∏—Ö—ñ–¥ / –±–∞–Ω)

# ----------------------------- –î–æ–ø–æ–º—ñ–∂–Ω–∏–π –ª–æ–≥–µ—Ä ---------------------------------
def dbg(msg: str) -> None:
    print(f"[DEBUG] {msg}")

# =================================================================================
#                                      COG
# =================================================================================
class WelcomeCog(commands.Cog):
    def __init__(self, bot: commands.Bot):
        self.bot = bot

        # –¢–µ–∫—Å—Ç–∏ / –∑–∞–≥–æ–ª–æ–≤–∫–∏
        self.templates = [
            "@{mention} –∑–∞–ª–µ—Ç—ñ–≤ –Ω–∞ –Ω–∞—à—É –±–∞–∑—É Silent Cove [BDO EU] –∑ –¥–≤–æ—Ö –Ω—ñ–≥!",
            "–î–†–ê–ö–û–ù –ü–†–û–ë–£–î–ò–í–°–Ø! @{mention} —Ä–æ–∑–≥–æ—Ä—Ç–∞—î –∫—Ä–∏–ª–∞ –Ω–∞–¥ —Å–µ—Ä–≤–µ—Ä–æ–º!",
            "–í –Ω–∞—à—ñ–π —Å–µ–∫—Ç—ñ‚Ä¶ –æ–π, —Ç–æ–±—Ç–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ, –Ω–æ–≤–∏–π —É—á–∞—Å–Ω–∏–∫ ‚Äì @{mention}!",
            "@{mention} —Å—Ö–æ–¥–∏—Ç—å —ñ–∑ –∑—ñ—Ä–æ–∫ –ø—Ä—è–º–æ –¥–æ –Ω–∞—Å. –ú–∞–≥—ñ—è —Ç—ñ–ª—å–∫–∏ –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è!",
            "–¢–∏—à–∞ –ø–æ—Ä—É—à–µ–Ω–∞. @{mention} –∑‚Äô—è–≤–∏–≤—Å—è —É –ª—ñ—Å—ñ Silent Cove!",
            "–ö–†–ò–¢–ò–ß–ù–ò–ô –í–ò–ë–£–• –ö–†–£–¢–û–°–¢–Ü! @{mention} –∞–∫—Ç–∏–≤—É–≤–∞–≤(–ª–∞) —É–ª—å—Ç—É!",
            "–ü–∞–Ω—ñ —Ç–∞ –ø–∞–Ω–æ–≤–µ, –∑—É—Å—Ç—Ä—ñ—á–∞–π—Ç–µ! –ù–∞–π–æ—á—ñ–∫—É–≤–∞–Ω—ñ—à–∏–π –≥—ñ—Å—Ç—å ‚Äì @{mention}!",
        ]
        self.titles = [
            "–ü—Ä–∏–±—É—Ç—Ç—è –Ω–æ–≤–æ–≥–æ –¥—É—Ö—É!",
            "–ü—Ä–∏–±—É—Ç—Ç—è –Ω–æ–≤–æ—ó —Å–æ–ª–æ–¥–∫–æ—ó –±—É–ª–æ—á–∫–∏!",
            "–ü—Ä–∏–±—É—Ç—Ç—è –Ω–æ–≤–æ–≥–æ –∫–æ—Ç—è—Ç–∫–∞!",
            "–ü—Ä–∏–±—É—Ç—Ç—è –Ω–æ–≤–æ—ó –∂–µ—Ä—Ç–≤–∏!",
        ]

        # –õ–æ–∫–∞–ª—å–Ω—ñ —Ñ–æ–Ω–∏
        self.backgrounds = [
            "assets/backgrounds/bg1.png",
            "assets/backgrounds/bg2.png",
            "assets/backgrounds/bg3.png",
        ]

        # –®—Ä–∏—Ñ—Ç
        self.font_regular_path = "assets/FixelDisplay-Regular.otf"
        self.max_font_size = 44

        # –ê–≤–∞—Ç–∞—Ä
        self.avatar_size = 420

    # --------------------------- –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∫–∞—Ä—Ç–∏–Ω–∫–∏ ---------------------------
    async def generate_welcome_image(self, member: discord.Member, welcome_text: str) -> discord.File | None:
        start_time = time.perf_counter()
        try:
            dbg(f"üîÑ –ü–æ—á–∏–Ω–∞—é —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–∞—Ä—Ç–∏–Ω–∫–∏ –¥–ª—è {member.display_name}")

            # –§–æ–Ω
            bg_path = random.choice(self.backgrounds)
            dbg(f"üì• –ó–∞–≤–∞–Ω—Ç–∞–∂—É—é —Ñ–æ–Ω: {bg_path}")
            try:
                bg = Image.open(bg_path).convert("RGBA")
            except Exception as e:
                dbg(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è —Ñ–æ–Ω—É {bg_path}: {e}")
                return None
            dbg("‚úÖ –§–æ–Ω –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ")
            draw = ImageDraw.Draw(bg)

            # –¢–µ–∫—Å—Ç
            dn_nbsp = str(member.display_name).replace(" ", "\u00A0")
            base_text = welcome_text.replace("{mention}", f"{dn_nbsp} Silent\u00A0Cove")
            dbg(f"üìù –î–æ–¥–∞—é —Ç–µ–∫—Å—Ç: {base_text}")

            try:
                font = ImageFont.truetype(self.font_regular_path, self.max_font_size)
            except Exception as e:
                dbg(f"‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —à—Ä–∏—Ñ—Ç {self.font_regular_path}, fallback ‚Üí default. {e}")
                font = ImageFont.load_default()

            # –ü—Ä–æ—Å—Ç–∞ —Ü–µ–Ω—Ç—Ä–æ–≤–∫–∞ –ø–æ —Å—É–≤–æ—é (–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ –º–æ–∂–Ω–∞ –ø—ñ–¥–∫—Ä—É—Ç–∏—Ç–∏ –ø—ñ–¥ —Ç–≤–æ—ó —Ñ–æ–Ω–∏)
            x, y = 400, 250
            draw.text((x, y), base_text, font=font, fill=(51, 29, 16, 255))
            dbg("‚úÖ –¢–µ–∫—Å—Ç –¥–æ–¥–∞–Ω–æ")

            # –ê–≤–∞—Ç–∞—Ä
            avatar_url = str(member.display_avatar.url if member.display_avatar else member.default_avatar.url)
            dbg(f"üì• –ó–∞–≤–∞–Ω—Ç–∞–∂—É—é –∞–≤–∞—Ç–∞—Ä: {avatar_url}")
            async with aiohttp.ClientSession() as session:
                async with session.get(avatar_url) as resp:
                    if resp.status == 200:
                        avatar_bytes = await resp.read()
                        av = Image.open(BytesIO(avatar_bytes)).convert("RGBA")
                        av = av.resize((self.avatar_size, self.avatar_size))

                        # –ö–æ–ª–æ
                        dbg("üñº –û–±—Ä—ñ–∑–∞—é –∞–≤–∞—Ç–∞—Ä —É –∫–æ–ª–æ")
                        mask = Image.new("L", (self.avatar_size, self.avatar_size), 0)
                        ImageDraw.Draw(mask).ellipse([0, 0, self.avatar_size, self.avatar_size], fill=255)
                        av.putalpha(mask)

                        # –ü–æ–∑–∏—Ü—ñ—è
                        ax = bg.width - self.avatar_size - 50
                        ay = bg.height - self.avatar_size - 50
                        bg.paste(av, (ax, ay), av)
                        dbg("‚úÖ –ê–≤–∞—Ç–∞—Ä –¥–æ–¥–∞–Ω–æ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É")
                    else:
                        dbg(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∞–≤–∞—Ç–∞—Ä–∞ (–∫–æ–¥ {resp.status})")

            # –£ –±—É—Ñ–µ—Ä
            buf = BytesIO()
            bg.save(buf, format="PNG")
            buf.seek(0)
            dbg("üíæ –ö–∞—Ä—Ç–∏–Ω–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–∞ —É –±—É—Ñ–µ—Ä")

            elapsed = time.perf_counter() - start_time
            dbg(f"‚è± –ß–∞—Å –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∫–∞—Ä—Ç–∏–Ω–∫–∏: {elapsed:.2f} —Å–µ–∫.")
            return discord.File(fp=buf, filename="welcome.png")

        except Exception as e:
            elapsed = time.perf_counter() - start_time
            dbg(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∫–∞—Ä—Ç–∏–Ω–∫–∏: {e}")
            dbg(f"‚è± –ß–∞—Å –¥–æ –ø–æ–º–∏–ª–∫–∏: {elapsed:.2f} —Å–µ–∫.")
            return None

    # --------------------------- –ü–æ–¥—ñ—ó ---------------------------
    @commands.Cog.listener()
    async def on_member_join(self, member: discord.Member):
        if member.bot:
            return
        channel = self.bot.get_channel(WELCOME_CHANNEL_ID)
        if not channel:
            return

        dbg(f"üëã –ù–æ–≤–∏–π —É—á–∞—Å–Ω–∏–∫ –ø—Ä–∏—î–¥–Ω–∞–≤—Å—è: {member.display_name}")
        file = await self.generate_welcome_image(member, random.choice(self.templates))
        if file:
            embed = discord.Embed(
                title=random.choice(self.titles),
                description=f"{member.mention}",
                color=WELCOME_COLOR
            )
            embed.set_image(url="attachment://welcome.png")
            embed.set_footer(text="Silent Concierge by Myxa", icon_url=self.bot.user.display_avatar.url)
            await channel.send(file=file, embed=embed)
            dbg("‚úÖ –ü—Ä–∏–≤—ñ—Ç–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ")

    @commands.Cog.listener()
    async def on_member_remove(self, member: discord.Member):
        channel = self.bot.get_channel(FAREWELL_CHANNEL_ID)
        if not channel:
            return
        dbg(f"üö™ –£—á–∞—Å–Ω–∏–∫ –ø–æ–∫–∏–Ω—É–≤ —Å–µ—Ä–≤–µ—Ä: {member.display_name}")

        embed = discord.Embed(
            title="üö™ –£—á–∞—Å–Ω–∏–∫ –ø–æ–∫–∏–Ω—É–≤ —Å–µ—Ä–≤–µ—Ä",
            description=f"{member.mention} –±—ñ–ª—å—à–µ –∑ –Ω–∞–º–∏ –Ω–µ–º–∞...",
            color=FAREWELL_COLOR
        )
        embed.set_thumbnail(url=member.display_avatar.url)
        if member.joined_at:
            embed.add_field(name="–î–∞—Ç–∞ –ø—Ä–∏—î–¥–Ω–∞–Ω–Ω—è", value=discord.utils.format_dt(member.joined_at, style="f"), inline=True)
        embed.add_field(name="–î–∞—Ç–∞ –≤–∏—Ö–æ–¥—É", value=discord.utils.format_dt(discord.utils.utcnow(), style="f"), inline=True)
        embed.set_footer(text="Silent Concierge by Myxa", icon_url=self.bot.user.display_avatar.url)
        await channel.send(embed=embed)

    @commands.Cog.listener()
    async def on_member_ban(self, guild: discord.Guild, user: discord.User):
        channel = self.bot.get_channel(FAREWELL_CHANNEL_ID)
        if not channel:
            return
        dbg(f"‚õî –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑–∞–±–∞–Ω–µ–Ω–æ: {user.name}")

        # DM –ø–µ—Ä–µ–¥ –±–∞–Ω–æ–º
        try:
            dm_embed = discord.Embed(
                title="‚õî –í–∏ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω—ñ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ Silent Cove",
                description="–í–∏ –Ω–µ –≤–∏–ø—Ä–∞–≤–¥–∞–ª–∏ –Ω–∞–¥–∞–Ω–æ—ó –≤–∞–º –¥–æ–≤—ñ—Ä–∏ —ñ —Ç–æ–º—É –º–∏ –ø—Ä–æ—â–∞—î–º–æ—Å—å –∑ –≤–∞–º–∏.",
                color=FAREWELL_COLOR
            )
            dm_embed.set_image(url="https://imgur.com/E0G8qTz.png")
            await user.send(embed=dm_embed)
            dbg("‚úÖ DM –ø—Ä–æ –±–∞–Ω –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ")
        except Exception as e:
            dbg(f"‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ DM: {e}")

        # –ü—Ä–∏—á–∏–Ω–∞ –∑ audit log
        reason = "–ù–µ –≤–∫–∞–∑–∞–Ω–æ"
        try:
            async for entry in guild.audit_logs(limit=5, action=discord.AuditLogAction.ban):
                if entry.target.id == user.id:
                    reason = entry.reason or "–ù–µ –≤–∫–∞–∑–∞–Ω–æ"
                    break
        except Exception as e:
            dbg(f"‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ audit log: {e}")

        embed = discord.Embed(
            title="‚õî –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑–∞–±–∞–Ω–µ–Ω–æ!",
            description=f"{user.mention} –ø–æ—Ä—É—à–∏–≤(–ª–∞) –ø—Ä–∞–≤–∏–ª–∞ Silent Cove.",
            color=FAREWELL_COLOR
        )
        embed.set_thumbnail(url=user.display_avatar.url)
        embed.add_field(name="–î–∞—Ç–∞ –≤–∏—Ö–æ–¥—É", value=discord.utils.format_dt(discord.utils.utcnow(), style="f"), inline=True)
        embed.add_field(name="–ü—Ä–∏—á–∏–Ω–∞", value=reason, inline=False)
        embed.set_footer(text="Silent Concierge by Myxa", icon_url=self.bot.user.display_avatar.url)
        await channel.send(embed=embed)

    # --------------------------- –°–ª–µ—à-–∫–æ–º–∞–Ω–¥–∏ ---------------------------
    @app_commands.command(name="testwelcome", description="–¢–µ—Å—Ç –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è —É –º–æ–¥-–∫–∞–Ω–∞–ª—ñ")
    @app_commands.checks.has_permissions(administrator=True)
    async def test_welcome(self, interaction: discord.Interaction):
        member = interaction.user
        channel = self.bot.get_channel(TEST_WELCOME_CHANNEL_ID)
        if not channel:
            await interaction.response.send_message("‚ùå –¢–µ—Å—Ç–æ–≤–∏–π –∫–∞–Ω–∞–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.", ephemeral=True)
            return

        await interaction.response.defer(ephemeral=True)
        dbg(f"üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è –¥–ª—è {member.display_name}")
        file = await self.generate_welcome_image(member, random.choice(self.templates))
        if file:
            embed = discord.Embed(
                title=random.choice(self.titles),
                description=f"{member.mention}",
                color=WELCOME_COLOR
            )
            embed.set_image(url="attachment://welcome.png")
            embed.set_footer(text="Silent Concierge by Myxa", icon_url=self.bot.user.display_avatar.url)
            msg = await channel.send(file=file, embed=embed)
            await interaction.followup.send(f"‚úÖ –¢–µ—Å—Ç–æ–≤–µ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è: [jump]({msg.jump_url})", ephemeral=True)
        else:
            await interaction.followup.send("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∫–∞—Ä—Ç–∏–Ω–∫—É.", ephemeral=True)

    @app_commands.command(name="ban", description="–ó–∞–±–∞–Ω–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ")
    @app_commands.checks.has_permissions(ban_members=True)
    async def ban_user(self, interaction: discord.Interaction, member: discord.Member, reason: str = "–ù–µ –≤–∫–∞–∑–∞–Ω–æ"):
        guild = interaction.guild
        channel = self.bot.get_channel(FAREWELL_CHANNEL_ID)

        await interaction.response.defer(ephemeral=True)
        dbg(f"‚öîÔ∏è –í–∏–∫–ª–∏–∫ /ban –Ω–∞ {member.display_name}, –ø—Ä–∏—á–∏–Ω–∞: {reason}")

        # DM
        try:
            dm_embed = discord.Embed(
                title="‚õî –í–∏ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω—ñ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ Silent Cove",
                description="–í–∏ –Ω–µ –≤–∏–ø—Ä–∞–≤–¥–∞–ª–∏ –Ω–∞–¥–∞–Ω–æ—ó –≤–∞–º –¥–æ–≤—ñ—Ä–∏ —ñ —Ç–æ–º—É –º–∏ –ø—Ä–æ—â–∞—î–º–æ—Å—å –∑ –≤–∞–º–∏.",
                color=FAREWELL_COLOR
            )
            dm_embed.set_image(url="https://imgur.com/E0G8qTz.png")
            await member.send(embed=dm_embed)
            dbg("‚úÖ DM –ø—Ä–æ –±–∞–Ω –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ")
        except Exception as e:
            dbg(f"‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ DM: {e}")

        # –ë–∞–Ω
        try:
            await guild.ban(member, reason=reason, delete_message_days=0)
            dbg("‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑–∞–±–∞–Ω–µ–Ω–æ")
        except Exception as e:
            dbg(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –±–∞–Ω—É: {e}")
            await interaction.followup.send(f"‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–±–∞–Ω–∏—Ç–∏ {member.mention}: {e}", ephemeral=True)
            return

        # –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É –∫–∞–Ω–∞–ª
        if channel:
            embed = discord.Embed(
                title="‚õî –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑–∞–±–∞–Ω–µ–Ω–æ!",
                description=f"{member.mention} –ø–æ—Ä—É—à–∏–≤(–ª–∞) –ø—Ä–∞–≤–∏–ª–∞ Silent Cove.",
                color=FAREWELL_COLOR
            )
            embed.set_thumbnail(url=member.display_avatar.url)
            if member.joined_at:
                embed.add_field(name="–î–∞—Ç–∞ –ø—Ä–∏—î–¥–Ω–∞–Ω–Ω—è", value=discord.utils.format_dt(member.joined_at, style="f"), inline=True)
            embed.add_field(name="–î–∞—Ç–∞ –≤–∏—Ö–æ–¥—É", value=discord.utils.format_dt(discord.utils.utcnow(), style="f"), inline=True)
            embed.add_field(name="–ü—Ä–∏—á–∏–Ω–∞", value=reason, inline=False)
            embed.set_footer(text="Silent Concierge by Myxa", icon_url=self.bot.user.display_avatar.url)
            await channel.send(embed=embed)

        await interaction.followup.send(f"‚úÖ {member.mention} –±—É–≤ –∑–∞–±–∞–Ω–µ–Ω–∏–π. –ü—Ä–∏—á–∏–Ω–∞: {reason}", ephemeral=True)

    @app_commands.command(name="unban", description="–†–æ–∑–±–∞–Ω–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–∑–∞ user –∞–±–æ ID)")
    @app_commands.checks.has_permissions(ban_members=True)
    async def unban_user(self, interaction: discord.Interaction, user: discord.User, reason: str = "–ù–µ –≤–∫–∞–∑–∞–Ω–æ"):
        guild = interaction.guild
        channel = self.bot.get_channel(FAREWELL_CHANNEL_ID)

        await interaction.response.defer(ephemeral=True)
        dbg(f"üü¢ –í–∏–∫–ª–∏–∫ /unban –Ω–∞ {user} (ID: {user.id}), –ø—Ä–∏—á–∏–Ω–∞: {reason}")

        try:
            await guild.unban(user, reason=reason)
            dbg("‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Ä–æ–∑–±–∞–Ω–µ–Ω–æ")
        except Exception as e:
            dbg(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —Ä–æ–∑–±–∞–Ω—É: {e}")
            await interaction.followup.send(f"‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è —Ä–æ–∑–±–∞–Ω–∏—Ç–∏ {user.mention}: {e}", ephemeral=True)
            return

        # –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É –∫–∞–Ω–∞–ª
        if channel:
            embed = discord.Embed(
                title="üü¢ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Ä–æ–∑–±–∞–Ω–µ–Ω–æ",
                description=f"{user.mention} –∑–Ω–æ–≤—É –º–æ–∂–µ –ø—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—å –¥–æ Silent Cove.",
                color=WELCOME_COLOR
            )
            embed.set_thumbnail(url=user.display_avatar.url)
            embed.add_field(name="–ü—Ä–∏—á–∏–Ω–∞", value=reason, inline=False)
            embed.set_footer(text="Silent Concierge by Myxa", icon_url=self.bot.user.display_avatar.url)
            await channel.send(embed=embed)

        await interaction.followup.send(f"‚úÖ {user.mention} —Ä–æ–∑–±–∞–Ω–µ–Ω–∏–π. –ü—Ä–∏—á–∏–Ω–∞: {reason}", ephemeral=True)

    @app_commands.command(name="syncall", description="–§–æ—Ä—Å–æ–≤–∞–Ω–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –≤—Å—ñ—Ö —Å–ª–µ—à-–∫–æ–º–∞–Ω–¥")
    @app_commands.checks.has_permissions(administrator=True)
    async def sync_all(self, interaction: discord.Interaction):
        await interaction.response.defer(ephemeral=True)
        dbg("üîÑ –í–∏–∫–æ–Ω—É—é syncall")
        try:
            synced = await self.bot.tree.sync()
            await interaction.followup.send(f"‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω–æ {len(synced)} —Å–ª–µ—à-–∫–æ–º–∞–Ω–¥.", ephemeral=True)
            dbg(f"‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω–æ {len(synced)} –∫–æ–º–∞–Ω–¥")
        except Exception as e:
            dbg(f"‚ùå –ü–æ–º–∏–ª–∫–∞ syncall: {e}")
            await interaction.followup.send(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó: {e}", ephemeral=True)

# ============================= SETUP ============================================
async def setup(bot: commands.Bot):
    await bot.add_cog(WelcomeCog(bot))