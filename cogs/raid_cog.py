import discord
from discord.ext import commands
from discord import app_commands, Interaction, Embed
import datetime
import pytz
import os
from dotenv import load_dotenv
from cogs.timezone_cog import get_timezone_for_user

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω–∞
load_dotenv()

# –î–∞–Ω—ñ –ø—Ä–æ –Ω–∞–π–º
raid_data = {
    'slots': 0,
    'taken': 0,
    'is_closed': False,
    'channel_id': None,
    'message_id': None,
    'date': None,
    'time': None,
    '–Ω–∞–π–º': None,
    'nick': None
}

def build_embed(bot, user_id):
    print(f"[DEBUG] üîÑ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –µ–º–±–µ–¥—É –¥–ª—è {raid_data['date']} {raid_data['time']} ‚Äî {raid_data['taken']}/{raid_data['slots']}")
    –∑–∞–ª–∏—à–∏–ª–æ—Å—å = max(0, raid_data['slots'] - raid_data['taken'])
    status = (
        "```ansi\n\u001b[2;31m–ó–ê–ö–†–ò–¢–û\u001b[0m```"
        if raid_data['is_closed'] else
        "```ansi\n\u001b[2;36m–í–Ü–î–ö–†–ò–¢–û\u001b[0m```"
    )
    embed_color = discord.Color.teal() if not raid_data['is_closed'] else discord.Color.red()

    user_tz = pytz.timezone(get_timezone_for_user(user_id))
    full_date = datetime.datetime.strptime(raid_data['date'], "%d.%m.%Y")
    date_timestamp = int(user_tz.localize(full_date).timestamp())

    embed = Embed(
        title=f"<:00000005_special:1376430317270995024> –ì—ñ–ª—å–¥—ñ–π–Ω—ñ –±–æ—Å–∏ –∑ ùó¶ùó∂ùóπùó≤ùóªùòÅ ùóñùóºùòÉùó≤",
        description=f"üìÖ <t:{date_timestamp}:D>",
        color=embed_color
    )

    embed.set_image(url="https://i.imgur.com/CNtxvsV.jpeg" if raid_data['is_closed'] else "https://i.imgur.com/5GvjWCd.jpeg")

    hour, minute = map(int, raid_data['time'].split(":"))
    combined = datetime.datetime.combine(full_date.date(), datetime.time(hour, minute))
    start_timestamp = int(user_tz.localize(combined).timestamp())
    embed.add_field(name="**‚è∞ –°—Ç–∞—Ä—Ç:**", value=f"**<t:{start_timestamp}:t>**, –ø—ñ—Å–ª—è –±–æ—Å—ñ–≤ **LoML**", inline=False)

    –Ω–∞–π–º_hour, –Ω–∞–π–º_minute = map(int, raid_data['–Ω–∞–π–º'].split(":"))
    –Ω–∞–π–º_combined = datetime.datetime.combine(full_date.date(), datetime.time(–Ω–∞–π–º_hour, –Ω–∞–π–º_minute))
    –Ω–∞–π–º_timestamp = int(user_tz.localize(–Ω–∞–π–º_combined).timestamp())
    embed.add_field(name="**‚è∞ –ù–∞–π–º:**", value=f"**<t:{–Ω–∞–π–º_timestamp}:F>** *(–º–æ–∂—É –±—É—Ç–∏ afk)* **–í–∏–Ω–∞–≥–æ—Ä–æ–¥–∞ –±—É–¥–µ —Ä–æ–∑–¥–∞–≤–∞—Ç–∏—Å—å –æ–¥—Ä–∞–∑—É, —Ç–æ–º—É –ø–æ—á–µ–∫–∞–π—Ç–µ 5 —Ö–≤–∏–ª–∏–Ω –ø—ñ—Å–ª—è –∑–∞—Ö–æ–¥—É –π —á–µ–∫–Ω—ñ—Ç—å –Ω–∞–≥–æ—Ä–æ–¥—É.**", inline=True)

    embed.add_field(
        name="**üìå –®–µ–ø–æ—Ç—ñ—Ç—å:**",
        value=f"```ansi\n\u001b[0;31m{raid_data['nick']}\u001b[0m```",
        inline=False)
    embed.add_field(name="**üèùÔ∏è –°–µ—Ä–≤–µ—Ä:**", value=f"**–ö–∞–º–∞—Å—ñ–ª—å–≤–∞ 5** *(—É—Ç–æ—á–Ω–∏—Ç–∏ –≤ –ü–ú)*", inline=False)
    embed.add_field(name="**üõ§Ô∏è –®–ª—è—Ö:**", value="**–•–∞–Ω ‚Üí –ë—Ä—É–¥ ‚Üí –§–µ—Ä—Ä—ñ–¥ ‚Üí CTG –Ω–∞ –§—É—Ç—É—Ä—É–º–∞** *(–º—ñ–∂ –±–æ—Å–∞–º–∏ 3‚Äì4 —Ö–≤)*", inline=False)
    embed.add_field(name="**üêô –ë–æ—Å:**", value="**3 —Ä—ñ–≤–Ω—è**", inline=False)
    embed.add_field(name="**üìå –ü—Ä–∏–º—ñ—Ç–∫–∞:**", value="**–Ø–∫—â–æ –≤–∏ –∑–∞–±—É–∫—ñ—Ä–æ–≤–∞–ª–∏ –º—ñ—Å—Ü–µ –≤ –∞–ª—å—è–Ω—Å—ñ, –Ω–µ –ø—Ä–æ—Ç–∏—Å–∫–∞–π—Ç–µ –ø—Ä–∏–π–Ω—è—Ç–∏ –¥–æ –≤—ñ–¥–≤–µ–¥–µ–Ω–æ–≥–æ —á–∞—Å—É.**", inline=False)
    embed.add_field(name="**üßÆ  –°–ª–æ—Ç–∏:**", value=f"**{raid_data['taken']} ‚úÖ –ó–∞–ª–∏—à–∏–ª–æ—Å—å: {–∑–∞–ª–∏—à–∏–ª–æ—Å—å}**", inline=False)
    embed.add_field(name="**üßæ –°—Ç–∞—Ç—É—Å:**", value=status, inline=False)

    embed.set_footer(
        text="S—ñlent Cove | –ù–∞–π–º –∞–∫—Ç–∏–≤–Ω–∏–π" if not raid_data['is_closed']
        else "Silent Cove | –©–µ –ø–æ–±–∞—á–∏–º–æ—Å—å –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –Ω–∞–π–º—É!",
        icon_url=bot.user.avatar.url if bot.user.avatar else bot.user.default_avatar.url
    )

    return embed

class RaidModal(discord.ui.Modal, title="üõ†Ô∏è –°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–∞–π–º"):
    day = discord.ui.TextInput(label="–î–µ–Ω—å (dd)", max_length=2)
    month = discord.ui.TextInput(label="–ú—ñ—Å—è—Ü—å (mm)", max_length=2)
    year = discord.ui.TextInput(label="–†—ñ–∫ (yyyy)", max_length=4)
    start_hour = discord.ui.TextInput(label="–ì–æ–¥–∏–Ω–∞ —Å—Ç–∞—Ä—Ç—É (hh)", max_length=2)
    start_minute = discord.ui.TextInput(label="–•–≤–∏–ª–∏–Ω–∞ —Å—Ç–∞—Ä—Ç—É (mm)", max_length=2)
    hire_hour = discord.ui.TextInput(label="–ì–æ–¥–∏–Ω–∞ –Ω–∞–π–º—É (hh)", max_length=2)
    hire_minute = discord.ui.TextInput(label="–•–≤–∏–ª–∏–Ω–∞ –Ω–∞–π–º—É (mm)", max_length=2)
    nick = discord.ui.TextInput(label="–ù—ñ–∫", max_length=50)
    slots = discord.ui.TextInput(label="–ö—ñ–ª—å–∫—ñ—Å—Ç—å —Å–ª–æ—Ç—ñ–≤", max_length=2)

    async def on_submit(self, interaction: Interaction):
        print(f"[DEBUG] üì• –ù–∞–¥—ñ—Å–ª–∞–Ω–æ —Ñ–æ—Ä–º—É —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–∞–π–º—É –≤—ñ–¥ {interaction.user.display_name}")
        raid_data['date'] = f"{self.day.value.zfill(2)}.{self.month.value.zfill(2)}.{self.year.value}"
        raid_data['time'] = f"{self.start_hour.value.zfill(2)}:{self.start_minute.value.zfill(2)}"
        raid_data['–Ω–∞–π–º'] = f"{self.hire_hour.value.zfill(2)}:{self.hire_minute.value.zfill(2)}"
        raid_data['nick'] = self.nick.value
        raid_data['slots'] = int(self.slots.value)
        raid_data['taken'] = 0
        raid_data['is_closed'] = False
        raid_data['channel_id'] = interaction.channel.id

        embed = build_embed(interaction.client, interaction.user.id)
        try:
            await interaction.response.send_message(embed=embed, view=RaidView(interaction.client, interaction.user.id))
            msg = await interaction.original_response()
            raid_data['message_id'] = msg.id
            print(f"[RAID] ‚úÖ –ù–∞–π–º —Å—Ç–≤–æ—Ä–µ–Ω–æ: {raid_data['date']} –æ {raid_data['time']} | –°–ª–æ—Ç–∏: {raid_data['slots']}")
        except Exception as e:
            print(f"[ERROR] ‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ modal –∞–±–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")
