
import discord
from discord.ext import commands
from discord import app_commands, Interaction
from discord.ui import View, Button
import aiohttp
from PIL import Image, ImageDraw
import io

class PostView(View):
    def __init__(self, options):
        super().__init__(timeout=None)
        for label in options:
            self.add_item(PostButton(label))

class PostButton(Button):
    def __init__(self, label):
        super().__init__(label=label, style=discord.ButtonStyle.primary)

    async def callback(self, interaction: Interaction):
        await interaction.response.send_message(f"‚úÖ –í–∏ –æ–±—Ä–∞–ª–∏: **{self.label}**", ephemeral=True)

class PostCog(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    async def rounded_image_from_url(self, url):
        try:
            async with aiohttp.ClientSession() as session:
                async with session.get(url) as resp:
                    if resp.status != 200:
                        return None
                    data = await resp.read()

            image = Image.open(io.BytesIO(data)).convert("RGBA")
            width, height = image.size
            radius = 40

            mask = Image.new('L', (width, height), 255)
            draw = ImageDraw.Draw(mask)
            draw.rounded_rectangle([(0, 0), (width, height)], radius=radius, fill=0)
            image.putalpha(255 - mask)

            buffer = io.BytesIO()
            image.save(buffer, format="PNG")
            buffer.seek(0)
            return discord.File(buffer, filename="rounded.png"), "attachment://rounded.png"
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è: {e}")
            return None, None

    @app_commands.command(name="–ø–æ—Å—Ç", description="–°—Ç–≤–æ—Ä–∏—Ç–∏ –¥–æ–ø–∏—Å –∞–±–æ –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è –∑ –∫–Ω–æ–ø–∫–∞–º–∏")
    @app_commands.describe(
        –∑–∞–≥–æ–ª–æ–≤–æ–∫="–ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è",
        —Ç–µ–∫—Å—Ç="–û—Å–Ω–æ–≤–Ω–∏–π —Ç–µ–∫—Å—Ç (markdown –ø—ñ–¥—Ç—Ä–∏–º—É—î—Ç—å—Å—è)",
        –∫–∞—Ä—Ç–∏–Ω–∫–∞="–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è (–±—É–¥–µ –æ–∫—Ä—É–≥–ª–µ–Ω–µ)",
        —à—Ä–∏—Ñ—Ç="–ù–∞–∑–≤–∞ —à—Ä–∏—Ñ—Ç—É (–Ω–µ –≤—ñ–∑—É–∞–ª—å–Ω–æ, –∞ —è–∫ —Ç–µ–∫—Å—Ç)",
        –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è1="–í–∞—Ä—ñ–∞–Ω—Ç 1",
        –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è2="–í–∞—Ä—ñ–∞–Ω—Ç 2",
        –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è3="–í–∞—Ä—ñ–∞–Ω—Ç 3",
        –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è4="–í–∞—Ä—ñ–∞–Ω—Ç 4",
        –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è5="–í–∞—Ä—ñ–∞–Ω—Ç 5"
    )
    async def –ø–æ—Å—Ç(self, interaction: Interaction,
        –∑–∞–≥–æ–ª–æ–≤–æ–∫: str = None,
        —Ç–µ–∫—Å—Ç: str = None,
        –∫–∞—Ä—Ç–∏–Ω–∫–∞: str = None,
        —à—Ä–∏—Ñ—Ç: str = None,
        –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è1: str = None,
        –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è2: str = None,
        –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è3: str = None,
        –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è4: str = None,
        –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è5: str = None
    ):
        await interaction.response.defer()

        embed = None
        file = None
        image_url = None

        if –∑–∞–≥–æ–ª–æ–≤–æ–∫ or —Ç–µ–∫—Å—Ç or –∫–∞—Ä—Ç–∏–Ω–∫–∞:
            embed = discord.Embed(
                title=–∑–∞–≥–æ–ª–æ–≤–æ–∫ or "",
                description=—Ç–µ–∫—Å—Ç or "",
                color=discord.Color.teal()
            )
            if —à—Ä–∏—Ñ—Ç:
                embed.set_author(name=f"–®—Ä–∏—Ñ—Ç: {—à—Ä–∏—Ñ—Ç}")
            if –∫–∞—Ä—Ç–∏–Ω–∫–∞:
                file, image_url = await self.rounded_image_from_url(–∫–∞—Ä—Ç–∏–Ω–∫–∞)
                if image_url:
                    embed.set_image(url=image_url)

        options = [opt for opt in [–æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è1, –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è2, –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è3, –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è4, –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è5] if opt]

        if not embed and options:
            view = PostView(options)
            await interaction.followup.send("üìä –í–∏–±–µ—Ä—ñ—Ç—å –≤–∞—Ä—ñ–∞–Ω—Ç:", view=view)
        elif embed and options:
            view = PostView(options)
            await interaction.followup.send(embed=embed, view=view, file=file)
        elif embed:
            await interaction.followup.send(embed=embed, file=file)
        else:
            await interaction.followup.send("‚ùå –í–∏ –Ω–µ –∑–∞–ø–æ–≤–Ω–∏–ª–∏ –∂–æ–¥–Ω–µ –ø–æ–ª–µ.")

async def setup(bot):
    await bot.add_cog(PostCog(bot))
